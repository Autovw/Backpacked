{
    "item.backpacked.backpack": "Backpack",
    "key.backpack": "Open Backpack",
    "container.backpack": "Backpack",
    "backpacked.configgui.keepBackpackOnDeath": "Keep Backpack on Death",
    "backpacked.configgui.backpackInventorySize": "Backpack Inventory Rows",
    "curios.identifier.backpacked": "Backpacked",
    "button.categories.backpacked": "Backpacked",
    "backpacked.gui.locked": "Locked",
    "backpacked.toast.unlocked_backpack": "Unlocked Backpack",
    "backpacked.button.open_backpack": "Open Backpack",
    "backpacked.button.reset": "Reset",
    "backpacked.button.save": "Save",
    "backpacked.button.customise.tooltip": "Customize",
    "backpacked.button.config.tooltip": "Config Options",
    "backpacked.button.show_effects.tooltip": "Show Effects",
    "backpacked.button.show_with_elytra.tooltip": "Show with Elytra",
    "backpacked.title.customise_backpack": "Customize Backpack",
    "message.backpacked.player_opened": "A player has opened your backpack",
    "backpacked.backpack.standard": "Standard",
    "backpacked.backpack.classic": "Classic",
    "backpacked.backpack.bamboo_basket": "Bamboo Basket",
    "backpacked.backpack.bamboo_basket.unlock": "Feed Bamboo to 10 different Pandas to unlock this backpack",
    "backpacked.backpack.rocket": "Rocket",
    "backpacked.backpack.rocket.unlock": "Fly over 50km with an Elytra to unlock this backpack",
    "backpacked.backpack.mini_chest": "Mini Chest",
    "backpacked.backpack.mini_chest.unlock": "Find 5 unopened Buried Treasure Chests to unlock this backpack",
    "backpacked.backpack.trash_can": "Trash Can",
    "backpacked.backpack.trash_can.unlock": "Recycle food and plants in a Composter 100 times to unlock this backpack",
    "backpacked.backpack.honey_jar": "Honey Jar",
    "backpacked.backpack.honey_jar.unlock": "Gather 20 Honey Bottles to unlock this backpack",
    "backpacked.chat.install_configured": "Install %s to access config options",
    "backpacked.chat.open_curseforge_page": "Open CurseForge Page",
    "backpacked.formatter.collected_x_of_x": "Collected %s / %s",
    "backpacked.formatter.fed_x_of_x": "Fed %s / %s",
    "backpacked.formatter.found_x_of_x": "Found %s / %s"
}